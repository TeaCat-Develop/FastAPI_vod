name: CI

on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  statuc-analysis: # mypy, black, ruff 등 정적 분석
    runs-on: ubuntu-22.04
    # 실제 프로덕션에서는 모든 버전을 고정하는 것이 좋다.
    # latest를 쓰면 알게 모르게 버전이 올라가서 장애가 날 수 있음

    steps:
      - name: Check out the codes
        uses: actions/checkout@v2

      - name: Setup python environment
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.5

      - name: Register Poetry bin
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run Black
        run: poetry run black . --check

      - name: Run Ruff
        run: |
          poetry run ruff check --select I
          poetry run ruff check

      - name: Run mypy
        run: poetry run mypy .

  test: # 전체 테스트 실행
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the codes
        uses: actions/checkout@v2

      - name: Setup python environment
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.5

      - name: Register Poetry bin
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run tests
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report -m
